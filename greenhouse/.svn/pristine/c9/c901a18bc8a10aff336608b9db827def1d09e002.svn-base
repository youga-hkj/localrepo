package com.newcoming.greenhouse.view.action;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.LinkedHashMap;
import java.util.List;
import java.util.Map;

import org.omg.CORBA.CTX_RESTRICT_SCOPE;
import org.springframework.context.annotation.Scope;
import org.springframework.stereotype.Controller;

import com.newcoming.greenhouse.base.BaseAction;
import com.newcoming.greenhouse.base.SysConstants;
import com.newcoming.greenhouse.domain.Greenhouse;
import com.newcoming.greenhouse.domain.PageBean;
import com.newcoming.greenhouse.domain.Park;
import com.newcoming.greenhouse.domain.SensorData;
import com.newcoming.greenhouse.util.AssemblyEquipmentNumber;
import com.newcoming.greenhouse.util.MapsUtil;
import com.newcoming.greenhouse.util.QueryHelper;
import com.opensymphony.xwork2.ActionContext;

@SuppressWarnings("serial")
@Controller
@Scope("prototype")
public class HistoryAction extends BaseAction<Greenhouse> {

//	private Long departmentId;
//	private Long[] greenhousesIds;
//	private Long[] roleIds;
	private Long parkId;
	private Long grId;
	private Integer equipmentKind;
	private List<Park> parks;
	private List<Greenhouse> greenhouses;
//	private Map<String,String> greenhouses;
	private List<List<SensorData>> historyLine= new ArrayList<List<SensorData>>();
	private Integer dataKind;
	

	/** 首页 */
	public String index() throws Exception {
//		System.out.println(dataKind);
		parks = parkService.getAllParks(getCurrentUser().getId());
		greenhouses = greenhouseService.getAllGreenhouses(getCurrentUser().getId());
		return "index";
	}
	
	/** 列表 */
	public String list() throws Exception{
	
		String likeEquipmentId = AssemblyEquipmentNumber.equipmentnumber(this.getParkId(), this.getGrId(), SysConstants.CTRL_EM,this.getEquipmentKind());
	//	System.out.println(likeEquipmentId);
		if(likeEquipmentId!=null){
		int nums = equipmentService.findPassagewayCount(likeEquipmentId).intValue();
		for(int i = 1;i<=nums;i++){
			String equipmentId = AssemblyEquipmentNumber.equipmentnumber(this.getParkId(), this.getGrId(), SysConstants.CTRL_EM,this.getEquipmentKind(),(long)i);
		//	System.out.println(equipmentId);
			
			String dateNow = "2016-04-07 04";//现在准确的日期时间用方法获取
			List<SensorData> currentLine = sensorDataService.getAllHistorySensorData(equipmentId, dateNow, this.getDataKind());
			historyLine.add(currentLine);
		}
		//System.out.println(historyLine.get(1).size());
		
	//	List<SensorData> list = sensorDataService.getAllHistorySensorData("1#01010102", "2016-04-07 04", 1);
	//	listForHistory.add(list);
		}
		return "list";
	}

	/** 删除 */
	public String delete() throws Exception {
		return "toList";
	}
	
	/** 添加 */
	public String add() throws Exception {
	
			return "toList";
	}

	
	
	public Long getParkId() {
		return parkId;
	}

	public void setParkId(Long parkId) {
		this.parkId = parkId;
	}

	public Long getGrId() {
		return grId;
	}

	public void setGrId(Long grId) {
		this.grId = grId;
	}

	public Integer getEquipmentKind() {
		return equipmentKind;
	}

	public void setEquipmentKind(Integer equipmentKind) {
		this.equipmentKind = equipmentKind;
	}

	public List<Park> getParks() {
		return parks;
	}


	public List<List<SensorData>> getHistoryLine() {
		return historyLine;
	}

	public void setHistoryLine(List<List<SensorData>> historyLine) {
		this.historyLine = historyLine;
	}

	public void setParks(List<Park> parks) {
		this.parks = parks;
	}


	public List<Greenhouse> getGreenhouses() {
		return greenhouses;
	}

	public void setGreenhouses(List<Greenhouse> greenhouses) {
		this.greenhouses = greenhouses;
	}

	public Integer getDataKind() {
		return dataKind;
	}

	public void setDataKind(Integer dataKind) {
		this.dataKind = dataKind;
	}


	
	
}
